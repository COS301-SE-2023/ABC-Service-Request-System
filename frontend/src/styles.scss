
// // Custom Theming for Angular Material
// // For more information: https://material.angular.io/guide/theming
// @use '@angular/material' as mat;
// // Plus imports for other components in your app.

// // Include the common styles for Angular Material. We include this here so that you only
// // have to load a single css file for Angular Material in your app.
// // Be sure that you only ever include this mixin once!
// @include mat.core();

// // Define the palettes for your theme using the Material Design palettes available in palette.scss
// // (imported above). For each palette, you can optionally specify a default, lighter, and darker
// // hue. Available color palettes: https://material.io/design/color/
// $Project-primary: mat.define-palette(mat.$indigo-palette);
// $Project-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// // The warn palette is optional (defaults to red).
// $Project-warn: mat.define-palette(mat.$red-palette);

// // Create the theme object. A theme consists of configurations for individual
// // theming systems such as "color" or "typography".
// $Project-theme: mat.define-light-theme((
//   color: (
//     primary: $Project-primary,
//     accent: $Project-accent,
//     warn: $Project-warn,
//   )
// ));

// // Include theme styles for core and each component used in your app.
// // Alternatively, you can import and @include the theme mixins for each component
// // that you are using.
// @include mat.all-component-themes($Project-theme);

// // Custom Theming for Angular Material
// // For more information: https://material.angular.io/guide/theming
// @use '@angular/material' as mat;
// // Plus imports for other components in your app.

// // Include the common styles for Angular Material. We include this here so that you only
// // have to load a single css file for Angular Material in your app.
// // Be sure that you only ever include this mixin once!
// @include mat.core();

// // Define the palettes for your theme using the Material Design palettes available in palette.scss
// // (imported above). For each palette, you can optionally specify a default, lighter, and darker
// // hue. Available color palettes: https://material.io/design/color/
// $Project-primary: mat.define-palette(mat.$indigo-palette);
// $Project-accent: mat.define-palette(mat.$gray-palette, A100, A100, A100);
// $Project-secondary: mat.define-palette(mat.$pink-palette, A200, A100, A400);
// // The warn palette is optional (defaults to red).
// $Project-warn: mat.define-palette(mat.$red-palette);
// // Create the theme object. A theme consists of configurations for individual
// // theming systems such as "color" or "typography".
// $Project-theme: mat.define-light-theme((
//   color: (
//     primary: $Project-primary,
//     accent: $Project-accent,
//     warn: $Project-warn,
//     secondary: $Project-secondary,
//   )
// ));

// // Include theme styles for core and each component used in your app.
// // Alternatively, you can import and @include the theme mixins for each component
// // that you are using.
// @include mat.all-component-themes($Project-theme);

/**
* Generated theme by Material Theme Generator
* https://materialtheme.arcsine.dev
* Fork at: https://materialtheme.arcsine.dev/?c=YHBhbGV0dGU$YHByaW1hcnk$YF48I2NjMzNjYSIsIj9lcjwjZjBjMmVmIiwiO2VyPCNiOTIwYjd$LCIlPmBePCM3OTc5NzkiLCI~ZXI8I2Q3ZDdkNyIsIjtlcjwjNWM1YzVjfiwid2Fybj5gXjwjZmYwMDAwIiwiP2VyPCNmZmIzYjMiLCI7ZXI8I2ZmMDAwMH4sIj9UZXh0PCMwMDAwMDAiLCI~PTwjZmFmYWZhIiwiO1RleHQ8I2ZmZmZmZiIsIjs9PCMyYzJjMmN$LCJmb250cz5bYEA8KC00IiwiZmFtaWx5PFBvcHBpbnMiLCJ2YXJpYW50PHJlZ3VsYXJ$LGBAPCgtMyIsImZhbWlseTxQb3BwaW5zfixgQDwoLTIiLCJmYW1pbHk8UG9wcGluc34sYEA8KC0xIiwiZmFtaWx5PFBvcHBpbnN$LGBAPGhlYWRsaW5lfixgQDx0aXRsZX4sYEA8c3ViKS0yfixgQDxzdWIpLTF$LGBAPGJvZHktMiIsImZhbWlseTxNb250c2VycmF0fixgQDxib2R5LTEiLCJmYW1pbHk8TW9udHNlcnJhdH4sYEA8YnV0dG9uIiwiZmFtaWx5PE1vbnRzZXJyYXR$LGBAPGNhcHRpb24iLCJmYW1pbHk8TW9udHNlcnJhdH4sYEA8aW5wdXQiLCJmYW1pbHk8TW9udHNlcnJhdCIsInNpemU$bnVsbH1dLCJpY29uczxGaWxsZWQiLCI~bmVzcz5mYWxzZSwidmVyc2lvbj4xMX0=
*/
/**
* Generated theme by Material Theme Generator
* https://materialtheme.arcsine.dev
* Fork at: https://materialtheme.arcsine.dev/?c=YHBhbGV0dGU$YHByaW1hcnk$YF48I2NjMzNjYSIsIj9lcjwjZjBjMmVmIiwiO2VyPCNiOTIwYjd$LCIlPmBePCM3OTc5NzkiLCI~ZXI8I2Q3ZDdkNyIsIjtlcjwjNWM1YzVjfiwid2Fybj5gXjwjZmYwMDAwIiwiP2VyPCNmZmIzYjMiLCI7ZXI8I2ZmMDAwMH4sIj9UZXh0PCMwMDAwMDAiLCI~PTwjZmFmYWZhIiwiO1RleHQ8I2ZmZmZmZiIsIjs9PCMyYzJjMmN$LCJmb250cz5bYEA8KC00IiwiZmFtaWx5PFBvcHBpbnMiLCJ2YXJpYW50PHJlZ3VsYXJ$LGBAPCgtMyIsImZhbWlseTxQb3BwaW5zfixgQDwoLTIiLCJmYW1pbHk8UG9wcGluc34sYEA8KC0xIiwiZmFtaWx5PFBvcHBpbnN$LGBAPGhlYWRsaW5lfixgQDx0aXRsZX4sYEA8c3ViKS0yfixgQDxzdWIpLTF$LGBAPGJvZHktMiIsImZhbWlseTxNb250c2VycmF0fixgQDxib2R5LTEiLCJmYW1pbHk8TW9udHNlcnJhdH4sYEA8YnV0dG9uIiwiZmFtaWx5PE1vbnRzZXJyYXR$LGBAPGNhcHRpb24iLCJmYW1pbHk8TW9udHNlcnJhdH4sYEA8aW5wdXQiLCJmYW1pbHk8TW9udHNlcnJhdCIsInNpemU$bnVsbH1dLCJpY29uczxGaWxsZWQiLCI~bmVzcz5mYWxzZSwidmVyc2lvbj4xM30=
*/


@use '@angular/material' as mat;
// @use '@angular/material/prebuilt-themes/indigo-pink.css' as mat; // Or another theme

// Be sure that you only ever include this mixin once!
@include mat.core();

// Define your theme with color palettes, typography and density

$mat-theme-primary-palette: map-merge(mat.$cyan-palette, ( contrast: (100: #150c4a,)));
$mat-theme-primary: mat.define-palette(
  $mat-theme-primary-palette,
  $default: 100,
  $lighter: 100,
  $darker: 700,
  $text: 500
);

$mat-theme-accent-palette: map-merge(mat.$teal-palette, ( 501: #4d77b6,contrast: (501: white,A100: white,A200: white,)));
$mat-theme-accent: mat.define-palette(
  $mat-theme-accent-palette,
  $default: 501,
  $lighter: A100,
  $darker: A200,
  $text: 600
);

$mat-theme-warn-palette: map-merge(mat.$pink-palette, ( ));
$mat-theme-warn: mat.define-palette(
  $mat-theme-warn-palette,
  $default: A200,
  $lighter: 500,
  $darker: 500,
  $text: A700
);

$mat-dark-theme-primary-palette: map-merge(mat.$lime-palette, ( contrast: (200: #030844,A100: rgba(0,0,0, 0.87),A700: rgba(0,0,0, 0.87),)));
$mat-dark-theme-primary: mat.define-palette(
  $mat-dark-theme-primary-palette,
  $default: 200,
  $lighter: A100,
  $darker: A700,
  $text: 700
);

$mat-dark-theme-accent-palette: map-merge(mat.$green-palette, ( contrast: (A200: black,50: black,A400: black,)));
$mat-dark-theme-accent: mat.define-palette(
  $mat-dark-theme-accent-palette,
  $default: A200,
  $lighter: 50,
  $darker: A400,
  $text: A100
);

$mat-dark-theme-warn-palette: map-merge(mat.$pink-palette, ( contrast: (A100: black,100: white,)));
$mat-dark-theme-warn: mat.define-palette(
  $mat-dark-theme-warn-palette,
  $default: A100,
  $lighter: 100,
  $darker: A700,
  $text: 100
);

@import url('https://fonts.googleapis.com/css2?family=Rubik:wght@300&display=swap');

$mat-typography: mat.define-typography-config(
  $font-family: 'Rubik',
  // $display-4:     mat.define-typography-level($font-size: 96px, $font-weight: 300, $font-family: Rubik),
  // $display-3:     mat.define-typography-level($font-size: 60px, $font-weight: 500, $font-family: Rubik),
  // $display-2:     mat.define-typography-level($font-size: 48px, $font-weight: 500, $font-family: Rubik),
  // $display-1:     mat.define-typography-level($font-size: 34px, $font-weight: 500, $font-family: Rubik),
  // $headline:      mat.define-typography-level($font-size: 24px, $font-weight: 500, $font-family: Rubik),
  // $title:         mat.define-typography-level($font-size: 20px, $font-weight: 500, $font-family: Rubik),
  // $subheading-2:  mat.define-typography-level($font-size: 18px, $font-weight: 500, $font-family: Rubik),
  // $subheading-1:  mat.define-typography-level($font-size: 20px, $font-weight: 500, $font-family: Rubik),
  $body-2:        mat.define-typography-level($font-size: 16px, $font-weight: 400, $font-family: Rubik),
  $body-1:        mat.define-typography-level($font-size: 18px, $font-weight: 400, $font-family: Rubik),
  $caption:       mat.define-typography-level($font-size: 16px, $font-weight: Medium, $font-family: Rubik),
  $button:        mat.define-typography-level($font-size: 16px, $font-weight: 500, $font-family: Rubik),
  // Line-height must be unit-less fraction of the font-size.
  // $input:         mat.define-typography-level($font-size: inherit, $line-height: 1.125, $font-weight: 500, $font-family: Rubik),
);

$mat-density: 0;
// @include mat.elevation(
//   $zValue: 12,
//   $color: #000,
//   $opacity: 0.5
// );

$mat-core-theme: mat.define-light-theme((
  color: (
    primary: $mat-theme-primary,
    accent: $mat-theme-accent,
    warn: $mat-theme-warn
  ),
  typography: $mat-typography,
  density: $mat-density
));

$mat-dark-theme: mat.define-dark-theme((
  color: (
    primary: $mat-dark-theme-primary,
    accent: $mat-dark-theme-accent,
    warn: $mat-dark-theme-warn,
  )
));

@include mat.all-component-themes($mat-core-theme);

.dark-theme {
  @include mat.all-component-colors($mat-dark-theme);
  background-color: #333;
  color: whitesmoke;
}

.light-theme {
  @include mat.all-component-themes($mat-core-theme);

  .sidenav{
      background: rgb(249, 251, 252);
  }
}

/* You can add global styles to this file, and also import other style files */
@import url('https://fonts.googleapis.com/css?family=Montserrat');
@import url('https://fonts.cdnfonts.com/css/futura-pt');


html, body{
  // width: 100vw;
  // overflow: hidden;
}

*{
  box-sizing: border-box
}

@tailwind base;
@tailwind components;
@tailwind utilities;

body{
  margin: 0px;
}

//comment
html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

.ng-select.custom .ng-select-container {
  border-color: grey;
  border-radius: 8px;
}

div.mat-expansion-panel-body {
  padding: 0 !important;
}

.widen {
  width: 94% !important;
}

.mat-spinner {
  ::ng-deep circle {
      stroke: #33dd82;
  }
}

// .light-mode {
//   @include angular-material-theme($mat-core-theme);
// }

// .dark-mode {
//   @include angular-material-theme($mat-dark-theme);
// }
